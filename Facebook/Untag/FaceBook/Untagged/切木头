public int woodCut(int[] L, int k) {
        //时间复杂度 o(L.length * log(max - min))  空间复杂度： o(1)
        // write your code here
        int start = 1;
        int end = 0;
        for (int item : L) {
            end = Math.max(end,item);
        }
        int mid = 0;
        while (start + 1 < end) {
            mid = start + (end - start) / 2;
            int count = getCount(mid,L);
            if (count >= k) {
                start = mid;
            }
            else {
                end = mid;
            }
        }
        if (getCount(end,L) >= k) {
            return end;
        }
        if (getCount(start,L) >= k) {
            return start;
        }
        return 0;
    }
    private int getCount(int cut, int[] L) {
        int res = 0;
        for (int item : L) {
            res += item / cut;
        }
        return res;
    }
