public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if (root == null) return result;
        TreeNode curt;
        TreeNode prev = null;
        Deque<TreeNode> stack = new ArrayDeque<>();
        stack.push(root);
        while (!stack.isEmpty()) {
             curt = stack.peek();
            if (prev == null || prev.left == curt || prev.right == curt) {
                if (curt.left != null) {
                    stack.push(curt.left);
                }
                else if (curt.right != null) {
                    stack.push(curt.right);
                }
            }
            else if (prev == curt.left) {
                if (curt.right != null) {
                    stack.push(curt.right);
                }
            }
            else {
                result.add(curt.val);
                stack.pop();
            }
            prev = curt;
        }
        return result;
