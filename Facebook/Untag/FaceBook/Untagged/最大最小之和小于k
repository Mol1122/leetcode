//时间复杂度 o(n)

 public int subset(int[] nums, int target) {
  if (nums.length == 0) return 0;
  Arrays.sort(nums);
  int left = 0;
  int right = nums.length - 1;
  int count = 0;
  while (left <= right && nums[left] <= target / 2) {
    while (left <= right && nums[left] + nums[right] > target) {
      right --;
    }
    count += Math.pow(2,(right - left));
    left ++;
  }
  return count;
}
