/* 爱丽丝参与一个大致基于纸牌游戏 “21点” 规则的游戏，描述如下：

爱丽丝以 0 分开始，并在她的得分少于 K 分时抽取数字。 抽取时，她从 [1, W] 的范围中随机获得一个整数作为分数进行累计，其中 W 是整数。 
每次抽取都是独立的，其结果具有相同的概率。

当爱丽丝获得不少于 K 分时，她就停止抽取数字。 爱丽丝的分数不超过 N 的概率是多少？ */

public class Solution {
    public double new21Game(int N, int K, int W) {
        if (K == 0 || N >= K + W) return 1;
        double[] dp = new double[N + 1];
        double res = 0.0, sum = 0.0;
        for (int i = 1; i <= N; i++) {
            dp[i] = i <= W ? sum / W + 1.0 / W : sum/W;
            if (i < K) {
                sum += dp[i];
            }
            if (i > W) {
                sum -= dp[i - W];
            }
            if (i >= K) {
                res += dp[i];
            }
        }
        return res;
    }
}
/* 动态规划题目。
dp[i]表示当目标为i时的概率，由于最后一次的选择的排数的范围为[i-w,i-1]，这时可选的牌有[1,w]，所以最后的点数和是[i,w+i-1]，
对应我们是要求大于等于K的数，所以最后的累加范围是[K,K+W-1]，所以我们的结果便是返回dp[i]（K<=i<=K+W-1）的和。
最后还有一个小技巧，由于最后的范围是[K,K+W-1]：
如果N>=K+W（意味着在最后一次累加和[K-W,K-1]选择时，无论选择[1,W]中的任何数，最后的累加和一定在[K,N]范围内，
在这种条件下[K,K+W-1]是[K,N]的子集，所以直接返回1；
如果N<K+W，那么我们最后的答案就只用累加[K,N]的dp值即可，所以申请长度为N+1的数组即可。 */
